# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
# services:
#   server:
#     build:
#       context: .
#       target: final
#     ports:
#       - 8080:8080
#     depends_on:
#       db:
#         condition: service_healthy
#     develop:
#       watch:
#        - action: rebuild
#          path: .
#     environment:
#       - ASPNETCORE_ENVIRONMENT=Development
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: ["CMD", "pg_isready"]
#       interval: 10s
#       timeout: 5s
#       retries: 5
#   tests:
#     build:
#        context: .
#        dockerfile: DockerFile
#     command: ["dotnet", "test", "--no-build", "--logger:trx"]
#     depends_on:
#       - db
#     environment:
#       - ConnectionStrings__DefaultConnection=Host=db;Database=example;Username=postgres;Password=example
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

services:
  server:
    build:
      context: .
      dockerfile: Dockerfile  
      target: final
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: .
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    secrets:
      - db-password

  db:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=example
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  tests:
    build:
      context: .
      dockerfile: Dockerfile  
      target: test            
    command: ["dotnet", "test", "--no-build", "--logger:trx"]

volumes:
  db-data:

secrets:
  db-password:
    file: db/password.txt
